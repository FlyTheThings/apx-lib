{%- extends 'Mandala.j2' %}


{%- block content -%}
// generated file

#pragma once

#include <mandala/MandalaMetaBase.h>
#include <mandala/MandalaConstants.h>
#include <mandala/MandalaPackBase.h>

namespace mandala {

{% set ind = ' '*indent_size %}
{% set ind1 = ' '*2*indent_size %}

// flat array of all formats and data types by UID
constexpr const mandala::fmt_s fmt_list[] = {
    { },
{%- call(m) mandala_meta() -%}
{%- if not m.d.content is defined and m.d.fmt != 'none' -%}

{% set units_id = '{}' %}

{%- if m.units_label -%}
{% set units_id = 'units_' + m.units_label %}
{% elif m.d.units and m.d.units is iterable %}
{% if (m.d.units|length) == 2 %}
{% set units_id = 'units_bit' %}
{% else %}
{% set units_id = 'units_opt' %}
{% endif %}
{%- endif -%}

{%- if m.d.fmt is defined -%}
{% set fmt = 'fmt_'+m.d.fmt %}
{% else %}
{% set fmt = 'default_fmt('+m.type_id+','+units_id+')' %}
{%- endif -%}

{%- if m.d.seq is defined -%}
{% set seq = 'seq_'+m.d.seq %}
{% else %}
{% set seq = 'default_seq('+m.type_id+','+units_id+')' %}
{%- endif -%}

{%- if m.d.ds is defined -%}
{% set ds = 'ds_'+m.d.ds %}
{% else %}
{% set ds = '{}' %}
{%- endif %}

{{ ind }}{ // {{ m.path|join('.') }}
{{ ind1 }}.uid = 0x{{ '%0x' % (m.uid) }},
{{ ind1 }}.type_id = {{ m.type_id }},
{{ ind1 }}.fmt = {{ fmt }},
{{ ind1 }}.seq = {{ seq }},
{{ ind1 }}.ds = {{ ds }},
{{ ind }}},

{%- endif -%}
{%- endcall %}

}; // meta array

inline constexpr const fmt_s &fmt(uid_t uid)
{
    return fmt_lookup(uid,fmt_list,sizeof(fmt_list)/sizeof(*fmt_list));
}


}; // namespace mandala

{% endblock %}
