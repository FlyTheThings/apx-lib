{%- extends 'Mandala.j2' %}

{%- macro mandala_dict_expand(d, indent=0, path=[], level=0) -%}
{% set ind = ' '*indent*indent_size %}
{% set ind1 = ' '*(indent+1)*indent_size %}
{% set path = path+[d.name] %}
{% set meta = path|join('::') %}

{%- if d.units is defined -%}
{% set units = d.units %}
{% else %}
{% set units = '' %}
{%- endif -%}

{%- if d.type == 'enum' -%}
{% set units = units|join(',') %}
{%- endif -%}

{{ ind }}{
{{ ind1 }}.name = {{ meta }}::name,
{{ ind1 }}.title = {{ meta }}::title,
{{ ind1 }}.descr = "{{ d.descr }}",
{{ ind1 }}.units = "{{ units }}",
{{ ind1 }}.alias = "{{ d.alias }}",
{{ ind1 }}.path = "{{ path|join('.') }}",
{{ ind1 }}.uid = {{ meta }}::uid,
{{ ind1 }}.level = {{ level }},
{{ ind1 }}.group = {% if d.content is defined %}1{% else %}0{% endif %},
{{ ind1 }}.type_id = type_{{ d.type }},
{{ ind1 }}.prec = {{ d.prec }},
{{ ind1 }}.sfmt = sfmt_{{ d.sfmt }},
{{ ind }}},
{% for i in d.content %}
{{ mandala_dict_expand(i, indent, path, level+1) }}
{%- endfor -%}
{%- endmacro -%}

{%- block content %}

#pragma once

#include <Mandala/tree/MandalaDictBase.h>
#include <MandalaMeta.h>

namespace mandala {

static constexpr const mandala::dict_meta_t dict[] = {
{% for i in data.content %}
{{ mandala_dict_expand(i, 1) }}
{% endfor %}
}; // dict array

}; // namespace

{% endblock %}
